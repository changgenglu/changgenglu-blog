{"name":"Postman 學習筆記.md","content":"# [Postman 學習筆記](https://tw.alphacamp.co/blog/postman-api-tutorial-for-beginners)\n\n## 參數區介紹\n\n### Params 網址參數頁\n\n設定 Query Params 搜尋參數 Path Variables 路徑變數\n\n- 預設只有 Query Params 搜尋參數，Path Variable 路徑變數，需要自行在網址上打上冒號＋變數名 (ex. \" : name \" )，才會出現\n- 設定方式都是採 Key - value ，可以根據情況彈性勾選\n\n### Authorization 驗證設定頁\n\n用來設定 Header 中的 Authorization 參數\n\n- No Auth | 不需要驗證\n- Basic Auth ｜帳號，密碼型驗證\n- token 驗證 ｜ token 型驗證\n\n### Header\n\n用來設定 Header 中的其他參數\n\npostman 把一些必要的參數隱藏起來，如需特殊設定，可以取消隱藏，進行修改。\n\n- User-Agent | 告知 Server，發出 Request 的 Client 瀏覽器、作業系統等資訊\n- Accept ｜告知 Server，Client 可以解讀的內容類型\n- Content-type | 告知 Server，Client 提交什麼類型內容\n\n### body\n\n較常用的是 form-data, x-www-form-urlencoded, raw，前兩者都是送出表單資料，最後一個提供較多彈性的資料格式。\n\n- form-data 不會針對內容進行編碼，可選擇 file 類型進行上傳檔案\n- x-www-form-urlencoded 會以 Key = val1 進行編碼，一般的表單資料使用\n- raw 放 postman JSON 資料\n\n## Laravel CSRF\n\n### 原因\n\n當使用 postman 發出 post 請求時，laravel 回傳 419 | expired\n\nlaravel 會透過應用程式自動產生一個 CSRF token 來管理每一個使用者的 session。\n\n這個 token 用於驗證已認證使用者，是否實際向應用程式發出請求。\n\n在`vender/laravel/framework/src/Illuminate/Session/Store.php`中可以看到，每次進入 laravel 專案的時候，都會檢查 session 中\\_token 是否存在，若不存在就會呼叫 `regenerateToken` 重新生成一個 token。\n\n```php\npublic function start()\n{\n    $this->loadSession();\n    if (! $this->has('_token')) {\n        $this->regenerateToken();\n    }\n\n    return $this->started = true;\n}\n```\n\n`regenerateToken` 實作，隨機產生亂數字元。\n\n```php\npublic function regenerateToken()\n{\n    $this->put('_token', Str::random(40));\n}\n```\n\n### postman 添加校驗 token\n\n先進入網站首頁取得 token\n\n將 token 放入 post request 的 header， X-XSRF-TOKEN 的欄位中。\n\n### 撰寫 javascript 自動獲取 token\n\n在進入網站首頁的 API 的 test 中，加入以下程式，以自動獲取 token。\n\n```php\npm.environment.set(\n    \"XSRF-TOKEN\",\n    decodeURIComponent(pm.cookies.get(\"XSRF-TOKEN\"))\n)\n```\n\n接著在 post 的 request 中的 header 加入 `X-XSRF-TOKEN:{{XSRF-TOKEN}}`\n\n## Postman 壓力測試(串行處理)\n\n在要測試的 request test 中定義測試的程式碼\n\n```javascript\n// 檢查 api 是否返回 200 status code\npm.test(\"Status code is 200\", function () {\n  console.log(JSON.parse(responseBody));\n  pm.response.to.have.status(200);\n});\n```\n\n開啟 Runner 選擇要測試的 api\n\n選擇 environment，調整請求次數: iterations，調整延遲時間：Delay\n\n## http status\n\n- 資訊回應 (informational responses) 100 - 199\n- 成功回應 (Successful responses) 200 - 299\n- 重定向 (Redirect) 300 - 399\n- 用戶端錯誤 (Client errors) 400 - 499\n- 伺服器端錯誤 (Server error) 500-599\n\n## postman 無法開啟 collection\n\n1. 將 postman 解除安裝\n2. 刪除 C:\\Users\\AppData\\Local\\Postman\n3. 刪除 C:\\Users\\AppData\\Roaming\\Postman\n4. 下載最新版本的 postman\n","tocContent":""}