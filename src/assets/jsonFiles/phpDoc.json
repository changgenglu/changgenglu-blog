{"name":"phpDoc.md","content":"# phpDoc\r\n\r\n[自動編寫程式](https://github.com/barryvdh/laravel-ide-helper)\r\n\r\n## 通用註解寫法\r\n\r\n### 註解範例（普通程式文件，類別文件，函數文件，變量定義文件）\r\n\r\n```php\r\n/**\r\n * XXXXX的文件\r\n *\r\n * 功能1： xxx\r\n * 功能2： xxx\r\n *\r\n * @file        $https://github.com/changgenglu/note/blob/master/phpDoc.md  $\r\n * @package     core\r\n * @author      Ivan <eatbreakfast2012@gmail.com>\r\n * @version     V1.0.0\r\n * @link        https://github.com/changgenglu/note/blob/master/phpDoc.md\r\n */\r\n```\r\n\r\n- `@file` 檔案位置：\r\n\r\n- `@version` 版本：\r\n\r\n- `@package` 是團隊事先定義好的，在 phpdocumentor 里同一 package 的文件可以給出跟蹤的鏈接。項目開發前需要對其定義。\r\n\r\n- `@link` 行後面接的地址是程式開發文檔的地址\r\n\r\n> 說明：以上自動更新版本及文件名需要設定 SVN，具體請自行搜尋 _'SVN 自動版本號'_\r\n\r\n### 類別註解，使用如下幾個 tag\r\n\r\n```php\r\n/**\r\n * xxxxx類\r\n *\r\n * 功能1：完成xxxx\r\n * 功能2：完成xxxxx\r\n *\r\n * @author      Ivan <eatbreakfast2012@gmail.com>\r\n * @access      public\r\n * @abstract\r\n */\r\npublic class DemoClass {\r\n //code...\r\n}\r\n```\r\n\r\n- `@access` (`public`|`private`) 標記類是私有的還是公用的。\r\n- `@abstract`標記該類是個抽象類\r\n\r\n### 類別屬性宣告註解\r\n\r\n```php\r\npublic class DemoClass {\r\n\r\n   /**\r\n    * 當前頁碼\r\n    *\r\n    * @var integer\r\n    */\r\n    public $currentPageNumber;\r\n\r\n   /**\r\n    * 私有變量使用下劃線開頭\r\n    *\r\n    * @var string\r\n    */\r\n    private $_instance;\r\n}\r\n```\r\n\r\n### 普通函數和類別中的函數註解\r\n\r\n```php\r\n/**\r\n * 獲得頭貼地址\r\n *\r\n * @author Ivan <eatbreakfast2012@gmail.com>\r\n *\r\n * @param string  $imageName  圖片檔案名\r\n * @param integer $size     檔案大小\r\n *\r\n * @return string\r\n */\r\nfunction getAvatarUrl($imageName, $size = 80)\r\n{\r\n    return sprintf(SITE_URL . '/service/images/cropped_%s/'.$imageName, $size);\r\n}\r\n\r\n```\r\n\r\n順序按照 author、param、return 來放，**區塊間空行**。\r\n\r\n### 程式段落註解\r\n\r\n段落註解和邏輯註解使用如下方式\r\n\r\n```php\r\n/**\r\n * 1 如果$_GET['do']等於buy,則購買條碼\r\n */\r\nif($_GET['do'] == 'buy')\r\n{\r\n    // 1.1 驗證用戶提交變量是否合法\r\n    if($_POST['strCodeNum'])\r\n    {\r\n\r\n    }\r\n    // 1.2 驗證用戶提交的碼是否可以購買\r\n    // 1.3 ..................\r\n} // end if\r\n\r\n/**\r\n * 2 如果$_GET['do']等於list,顯示用戶選擇的條碼\r\n */\r\nif($_GET['do'] == 'list')\r\n{\r\n    // 2.1 驗證用戶提交變量是否合法\r\n    if($_POST['strCodeNum'])\r\n    {\r\n\r\n    }\r\n    // 2.2 驗證用戶提交的碼是否可以購買\r\n\r\n    // 2.3 ..................\r\n} // end if\r\n```\r\n\r\n## PHPdoc 規範\r\n\r\n[WIKI 上的 PHPDoc](http://en.wikipedia.org/wiki/Phpdoc)\r\n\r\n| 標記        | 用途                              | 描述                                                                     |\r\n| ----------- | --------------------------------- | ------------------------------------------------------------------------ |\r\n| @abstract   |                                   | 抽象類的變量和方法                                                       |\r\n| @access     | public, private or protected      | 文檔的訪問、使用權限. @access private 表明這個文檔是被保護的。           |\r\n| @author     | Ivan <eatbreakfast2012@gmail.com> | 文檔作者                                                                 |\r\n| @copyright  | 名稱 時間                         | 文檔版權信息                                                             |\r\n| @deprecated | version                           | 文檔中被廢除的方法                                                       |\r\n| @deprec     |                                   | 同 @deprecated                                                           |\r\n| @example    | /path/to/example                  | 文檔的外部保存的示例文件的位置。                                         |\r\n| @exception  |                                   | 文檔中方法拋出的異常，也可參照 @throws.                                  |\r\n| @global     | 類型：$globalvarname              | 文檔中的全局變量及有關的方法和函數                                       |\r\n| @ignore     |                                   | 忽略文檔中指定的關鍵字                                                   |\r\n| @internal   |                                   | 開發團隊內部信息                                                         |\r\n| @link       | URL                               | 類似於 license 但還可以通過 link 找到文檔中的更多個詳細的信息            |\r\n| @name       | 變量別名                          | 為某個變量指定別名                                                       |\r\n| @magic      |                                   | phpdoc.de compatibility                                                  |\r\n| @package    | 封裝包的名稱                      | 一組相關類、函數封裝的包名稱                                             |\r\n| @param      | 如 $username 用戶名               | 變量含義註解                                                             |\r\n| @return     | 如 返回 bool                      | 函數返回結果描述，一般不用在 void（空返回結果的）的函數中                |\r\n| @see        | 如 Class Login()                  | 文件關聯的任何元素（全局變量，包括，頁面，類，函數，定義，方法，變量）。 |\r\n| @since      | version                           | 記錄什麽時候對文檔的哪些部分進行了更改                                   |\r\n| @static     |                                   | 記錄靜態類、方法                                                         |\r\n| @staticvar  |                                   | 在類、函數中使用的靜態變量                                               |\r\n| @subpackage |                                   | 子版本                                                                   |\r\n| @throws     |                                   | 某一方法拋出的異常                                                       |\r\n| @todo       |                                   | 表示文件未完成或者要完善的地方                                           |\r\n| @var        | type                              | 文檔中的變量及其類型                                                     |\r\n| @version    |                                   | 文檔、類、函數的版本信息                                                 |\r\n\r\nPHPDoc 註解實例：\r\n\r\n```php\r\n<?php\r\n /**\r\n  * start page for webaccess\r\n  *\r\n  * PHP version 5\r\n  *\r\n  * @category  PHP\r\n  * @package   PSI_Web\r\n  * @author    Michael Cramer <BigMichi1@users.sourceforge.net>\r\n  * @copyright 2009 phpSysInfo\r\n  * @license   http://opensource.org/licenses/gpl-2.0.php GNU General Public License\r\n  * @version   SVN: $Id: class.Webpage.inc.php 412 2010-12-29 09:45:53Z Jacky672 $\r\n  * @link      http://phpsysinfo.sourceforge.net\r\n  */\r\n  /**\r\n  * generate the dynamic webpage\r\n  *\r\n  * @category  PHP\r\n  * @package   PSI_Web\r\n  * @author    Michael Cramer <BigMichi1@users.sourceforge.net>\r\n  * @copyright 2009 phpSysInfo\r\n  * @license   http://opensource.org/licenses/gpl-2.0.php GNU General Public License\r\n  * @version   Release: 3.0\r\n  * @link      http://phpsysinfo.sourceforge.net\r\n  */\r\n class Webpage extends Output implements PSI_Interface_Output\r\n {\r\n     /**\r\n      * configured language\r\n      *\r\n      * @var String\r\n      */\r\n     private $_language;\r\n\r\n     /**\r\n      * configured template\r\n      *\r\n      * @var String\r\n      */\r\n     private $_template;\r\n\r\n     /**\r\n      * all available templates\r\n      *\r\n      * @var Array\r\n      */\r\n     private $_templates = array();\r\n\r\n     /**\r\n      * all available languages\r\n      *\r\n      * @var Array\r\n      */\r\n     private $_languages = array();\r\n\r\n     /**\r\n      * check for all extensions that are needed, initialize needed vars and read config.php\r\n      */\r\n     public function __construct()\r\n     {\r\n         parent::__construct();\r\n         $this->_getTemplateList();\r\n         $this->_getLanguageList();\r\n     }\r\n\r\n     /**\r\n      * checking config.php setting for template, if not supportet set phpsysinfo.css as default\r\n      * checking config.php setting for language, if not supported set en as default\r\n      *\r\n      * @return void\r\n      */\r\n     private function _checkTemplateLanguage()\r\n     {\r\n         $this->_template = trim(PSI_DEFAULT_TEMPLATE);\r\n         if (!file_exists(APP_ROOT.'/templates/'.$this->_template.\".css\")) {\r\n             $this->_template = 'phpsysinfo';\r\n         }\r\n\r\n         $this->_language = trim(PSI_DEFAULT_LANG);\r\n         if (!file_exists(APP_ROOT.'/language/'.$this->_language.\".xml\")) {\r\n             $this->_language = 'en';\r\n         }\r\n     }\r\n\r\n     /**\r\n      * get all available tamplates and store them in internal array\r\n      *\r\n      * @return void\r\n      */\r\n     private function _getTemplateList()\r\n     {\r\n         $dirlist = CommonFunctions::gdc(APP_ROOT.'/templates/');\r\n         sort($dirlist);\r\n         foreach ($dirlist as $file) {\r\n             $tpl_ext = substr($file, strlen($file) - 4);\r\n             $tpl_name = substr($file, 0, strlen($file) - 4);\r\n             if ($tpl_ext === \".css\") {\r\n                 array_push($this->_templates, $tpl_name);\r\n             }\r\n         }\r\n     }\r\n\r\n     /**\r\n      * get all available translations and store them in internal array\r\n      *\r\n      * @return void\r\n      */\r\n     private function _getLanguageList()\r\n     {\r\n         $dirlist = CommonFunctions::gdc(APP_ROOT.'/language/');\r\n         sort($dirlist);\r\n         foreach ($dirlist as $file) {\r\n             $lang_ext = substr($file, strlen($file) - 4);\r\n             $lang_name = substr($file, 0, strlen($file) - 4);\r\n             if ($lang_ext == \".xml\") {\r\n                 array_push($this->_languages, $lang_name);\r\n             }\r\n         }\r\n     }\r\n\r\n     /**\r\n      * render the page\r\n      *\r\n      * @return void\r\n      */\r\n     public function run()\r\n     {\r\n         $this->_checkTemplateLanguage();\r\n\r\n         $tpl = new Template(\"/templates/html/index_dynamic.html\");\r\n\r\n         $tpl->set(\"template\", $this->_template);\r\n         $tpl->set(\"templates\", $this->_templates);\r\n         $tpl->set(\"language\", $this->_language);\r\n         $tpl->set(\"languages\", $this->_languages);\r\n\r\n         echo $tpl->fetch();\r\n     }\r\n }\r\n```\r\n","tocContent":""}