{"name":"Laravel Migration & Seeder & Factory.md","content":"# Laravel Migration & Seeder & Factory\n\n>\n\n## Migration\n\n### 產生 Migration 檔案\n\n```cmd\nphp artisan make:migration create_your_table\n```\n\n- 產生出來的 Migration 檔案，內有 up() 和 down() 兩個方法。\n\n```php\n    public function up()\n    {\n        Schema::create('room_user', function (Blueprint $table) {\n            $table->id();\n            $table->unsignedBigInteger('user_id');\n            $table->bigInteger('parent_id')->comment('將此成員加入系統的使用者');\n            $table->unsignedBigInteger('room_id')->nullable();\n            $table->bigInteger('role_id')->comment('使用者身分');\n            $table->timestamps();\n        });\n\n        Schema::table('room_user', function (Blueprint $table) {\n            $table->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onDelete('cascade');\n            $table->foreign('room_id')\n                ->references('id')\n                ->on('rooms')\n                ->nullOnDelete();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::table('room_user', function (Blueprint $table) {\n            $table->dropForeign('room_user_user_id_foreign');\n        });\n        Schema::dropIfExists('model_has_user');\n    }\n```\n\n### 執行 Migrate\n\n```cmd\nphp artisan migrate\n```\n\n### 還原 Migrate\n\n- 實際上他會實作 down() ，並將資料表內的資料刪掉。\n\n```cmd\nphp artisan migrate:rollback\nphp artisan migrate:rollback --step=5 // 還原最後 5 個 Migration\n```\n\n- 如果今天將 down() 註解掉，一樣會進行 Migrate 刪除 table 中的資料，但不會刪除資料表。\n\n### 重置 Migration\n\n```cmd\n//重置所有 Migration\nphp artisan migrate:refresh\n\n//重置所有 Migration 並同時建立資料\nphp artisan migrate:refresh --seed\n```\n\n## [Seed](https://ithelp.ithome.com.tw/articles/10216376)\n\n### 產生 Seeder 檔案\n\n```cmd\nphp artisan make:seed PersonTableSeeder\n```\n\n此時會多出一個檔案`database/seeds/PersonTableSeeder.php`，\n在`database/seeds/DatabaseSeeder.php`中，修改要呼叫的 Seeder：\n\n```php=\n$this->call([\n    PersonTableSeeder::class\n]);\n```\n\n執行 Seeder 時會呼叫 seeder 類別裡預設的 run() 方法。\n\n在`PersonTableSeeder.php`中加入要產生的資料。\n\n```php=\npublic function run()\n    {\n        DB::table('users')->insert([\n            'last_name' => str_random(10),\n            'email' => str_random(10).'@gmail.com',\n            'password' => bcrypt('secret'),\n        ]);\n    }\n```\n\n也可以使用模型工廠 factory 來大量生產資料。\n\n```php=\nfactory(App\\Person::class, 50)->create();\n// 使用 Person 的 factory\n```\n\n### 執行 Seeder\n\n用`--class`來指定特定的 Seeder Class\n\n```cmd\nphp artisan db:seed\n\nphp artisan db:seed --class=UsersTableSeeder\n```\n\n## [Factory](https://learnku.com/docs/laravel/10.x/eloquent-factories/14894)\n\n> [深入了解 Faker](https://learnku.com/laravel/t/62386)\n\n### 產生 Factory 檔案\n\n```cmd\nphp artisan make:factory PersonFactory --model=Person\n```\n\n`--model=Person`選項用在指定 Factory 創建的 model 名稱，將會為指定 model 產生 Factory 文件。\n\n到`/database/factories/PersonFactory.php`，設定要填充的資料欄位。\n\n```php\n$factory->define(Person::class, function (Faker $faker) {\n    return [\n        'last_name' => $faker->lastName,\n        'email'     => $faker->safeEmail,\n        'password'  => $faker->password\n    ];\n});\n```\n\n### 工廠物件實例化\n\n當定義好工廠物件後，可以使用 model 的 factory 的靜態方法將工廠物件實例化。\n\n```php\nuse App\\Models\\User\n\n$user = User::factory()->make();\n// 用 count 方法來建立多個模型集合\n$user = User::factory()->count(3)->make();\n// 調用工廠物件中定義的狀態\n$user = User::factory()->count(3)->suspended()->make();\n```\n\n\n\n### [Faker Formatters](https://github.com/fzaninotto/Faker#formatters)\n\n- Faker 使用中文\n\n在 config\\app.php 下新增一行，指定 Faker 使用 zh_TW 語言\n\n```php=\n'faker_locale' => 'zh_TW',\n```\n","tocContent":"- [Laravel Migration \\& Seeder \\& Factory](#laravel-migration--seeder--factory)\n  - [Migration](#migration)\n    - [產生 Migration 檔案](#產生-migration-檔案)\n    - [執行 Migrate](#執行-migrate)\n    - [還原 Migrate](#還原-migrate)\n    - [重置 Migration](#重置-migration)\n  - [Seed](#seed)\n    - [產生 Seeder 檔案](#產生-seeder-檔案)\n    - [執行 Seeder](#執行-seeder)\n  - [Factory](#factory)\n    - [產生 Factory 檔案](#產生-factory-檔案)\n    - [Faker Formatters](#faker-formatters)"}