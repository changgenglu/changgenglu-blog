{"name":"Laravel Migration & Seeder & Factory.md","content":"# Laravel Migration & Seeder & Factory\r\n\r\n>\r\n\r\n## Migration\r\n\r\n### 產生 Migration 檔案\r\n\r\n```cmd\r\nphp artisan make:migration create_your_table\r\n```\r\n\r\n- 產生出來的 Migration 檔案，內有 up() 和 down() 兩個方法。\r\n\r\n```php\r\n    public function up()\r\n    {\r\n        Schema::create('room_user', function (Blueprint $table) {\r\n            $table->id();\r\n            $table->unsignedBigInteger('user_id');\r\n            $table->bigInteger('parent_id')->comment('將此成員加入系統的使用者');\r\n            $table->unsignedBigInteger('room_id')->nullable();\r\n            $table->bigInteger('role_id')->comment('使用者身分');\r\n            $table->timestamps();\r\n        });\r\n\r\n        Schema::table('room_user', function (Blueprint $table) {\r\n            $table->foreign('user_id')\r\n                ->references('id')\r\n                ->on('users')\r\n                ->onDelete('cascade');\r\n            $table->foreign('room_id')\r\n                ->references('id')\r\n                ->on('rooms')\r\n                ->nullOnDelete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reverse the migrations.\r\n     *\r\n     * @return void\r\n     */\r\n    public function down()\r\n    {\r\n        Schema::table('room_user', function (Blueprint $table) {\r\n            $table->dropForeign('room_user_user_id_foreign');\r\n        });\r\n        Schema::dropIfExists('model_has_user');\r\n    }\r\n```\r\n\r\n### 執行 Migrate\r\n\r\n```cmd\r\nphp artisan migrate\r\n```\r\n\r\n### 還原 Migrate\r\n\r\n- 實際上他會實作 down() ，並將資料表內的資料刪掉。\r\n\r\n```cmd\r\nphp artisan migrate:rollback\r\nphp artisan migrate:rollback --step=5 // 還原最後 5 個 Migration\r\n```\r\n\r\n- 如果今天將 down() 註解掉，一樣會進行 Migrate 刪除 table 中的資料，但不會刪除資料表。\r\n\r\n### 重置 Migration\r\n\r\n```cmd\r\n//重置所有 Migration\r\nphp artisan migrate:refresh\r\n\r\n//重置所有 Migration 並同時建立資料\r\nphp artisan migrate:refresh --seed\r\n```\r\n\r\n## [Seed](https://ithelp.ithome.com.tw/articles/10216376)\r\n\r\n### 產生 Seeder 檔案\r\n\r\n```cmd\r\nphp artisan make:seed PersonTableSeeder\r\n```\r\n\r\n此時會多出一個檔案`database/seeds/PersonTableSeeder.php`，\r\n在`database/seeds/DatabaseSeeder.php`中，修改要呼叫的 Seeder：\r\n\r\n```php=\r\n$this->call(PersonTableSeeder::class);\r\n```\r\n\r\n執行 Seeder 時會呼叫 seeder 類別裡預設的 run() 方法。\r\n\r\n在`PersonTableSeeder.php`中加入要產生的資料。\r\n\r\n```php=\r\npublic function run()\r\n    {\r\n        DB::table('users')->insert([\r\n            'last_name' => str_random(10),\r\n            'email' => str_random(10).'@gmail.com',\r\n            'password' => bcrypt('secret'),\r\n        ]);\r\n    }\r\n```\r\n\r\n也可以使用模型工廠 factory 來大量生產資料。\r\n\r\n```php=\r\nfactory(App\\Person::class, 50)->create();\r\n// 使用 Person 的 factory\r\n```\r\n\r\n### 執行 Seeder\r\n\r\n用`--class`來指定特定的 Seeder Class\r\n\r\n```cmd\r\nphp artisan db:seed\r\n\r\nphp artisan db:seed --class=UsersTableSeeder\r\n```\r\n\r\n## [Factory](https://learnku.com/docs/laravel/6.x/database-testing/5185)\r\n\r\n> [深入了解 Faker](https://learnku.com/laravel/t/62386)\r\n\r\n### 產生 Factory 檔案\r\n\r\n```cmd\r\nphp artisan make:factory PersonFactory --model=Person\r\n```\r\n\r\n`--model=Person`選項用在指定 Factory 創建的 model 名稱，將會為指定 model 產生 Factory 文件。\r\n\r\n到`/database/factories/PersonFactory.php`，設定要填充的資料欄位。\r\n\r\n```php=\r\n$factory->define(Person::class, function (Faker $faker) {\r\n    return [\r\n        'last_name' => $faker->lastName,\r\n        'email'     => $faker->safeEmail,\r\n        'password'  => $faker->password\r\n    ];\r\n});\r\n```\r\n\r\n### [Faker Formatters](https://github.com/fzaninotto/Faker#formatters)\r\n\r\n- Faker 使用中文\r\n\r\n在 config\\app.php 下新增一行，指定 Faker 使用 zh_TW 語言\r\n\r\n```php=\r\n'faker_locale' => 'zh_TW',\r\n```\r\n","tocContent":"- [Laravel Migration \\& Seeder \\& Factory](#laravel-migration--seeder--factory)\r\n  - [Migration](#migration)\r\n    - [產生 Migration 檔案](#產生-migration-檔案)\r\n    - [執行 Migrate](#執行-migrate)\r\n    - [還原 Migrate](#還原-migrate)\r\n    - [重置 Migration](#重置-migration)\r\n  - [Seed](#seed)\r\n    - [產生 Seeder 檔案](#產生-seeder-檔案)\r\n    - [執行 Seeder](#執行-seeder)\r\n  - [Factory](#factory)\r\n    - [產生 Factory 檔案](#產生-factory-檔案)\r\n    - [Faker Formatters](#faker-formatters)"}