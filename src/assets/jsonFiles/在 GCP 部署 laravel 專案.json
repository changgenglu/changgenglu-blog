{"name":"在 GCP 部署 laravel 專案.md","content":"# 在 GCP 部署 laravel 專案\n\n> [執行環境設定](https://bugswarehouse.blogspot.com/2018/07/gcpgceubuntuapachelaravel56.html)\n>\n> - Ubuntu 20.04.1 LTS \\n \\l\n> - Apache/2.4.41 (Ubuntu)\n> - mysql Ver 8.0.29-0ubuntu0.20.04.3 for Linux on x86_64 ((Ubuntu))\n> - PHP 7.4.3\n> - git 2.25.1\n> - Composer 2.0.12\n\n## 設置專案\n\n### clone git repo\n\n將目錄切換到`/srv/www`，將託管在 git repo 的專案 clone 下來並依 laravel 上線環境設定流程執行。\n一般而言會將文件名稱設為域名。\n將目錄切換到 Apache 主機放公開程式的地方`/var/www`，將設定軟連結指向專案位置\n\n```bash\nln -s /srv/www/your_project.com /var/www/your_project.com\n```\n\n### 上線環境設定\n\n1. 安裝 compsoer 排除 dev 項目\n\n   ```bash\n   composer install --optimize-autoloader --no-dev\n   ```\n\n2. `.env`設定轉為線上並且關閉錯誤提示\n\n   ```php\n   APP_NAME=專案名稱\n   APP_ENV=production\n   APP_KEY=\n   APP_DEBUG=false\n   APP_URL=https://正式網址\n   ```\n\n3. 設定快取\n\n   ```bash\n   php artisan config:cache\n\n   #　下次更新程式記得更新config\n   php artisan config:clear\n   ```\n\n4. Composer 緩存\n\n   ```bash\n   composer dumpautoload -o\n   # 每次更新 composer install 後，都要再執行一次\n   ```\n\n5. 建立 keygen\n\n   ```bash\n   php artisan key:generate\n   ```\n\n6. 執行資料庫 migrate (須注意資料庫狀態)\n\n   ```bash\n   # 遷移資料表\n   php artisan migrate\n\n   # 填充資料\n   php artisan db:seed\n   ```\n\n7. 障礙排除\n\n   - 清除快取\n\n   ```bash\n   php artisan config:clear\n   ```\n\n   - migrate 指令\n\n   ```bash\n   # 還原 --step 此參數為後退多少版本\n   php artisan migrate:rollback\n   php artisan migrate:rollback --step=5\n\n   # 重置所有migration\n   php artisan migrate:refresh\n\n   # 重置所有migration，並填充資料\n   php artisan migrate:refresh --seed\n   ```\n\n### 設定專案文件夾的權限\n\n```bash\nsudo chgrp -R www-data /srv/www/your_project.com\nsudo chmod -R 775 /srv/www/your_project.com/storage\n```\n\n## 2. 設定 Apache\n\n- 設定 Apache server\n\n```bash\ncd /etc/apache2/sites-available\ncp 000-default.conf your_project.com.conf\n```\n\n- 編輯 conf 文件\n  - ServerName : 設定伺服器 Domain Name ，此名稱必須已經註冊\n  - ServerAdmin : 設定虛擬主機的管理者信箱，不一定要和本機的網站管理者相同\n  - ServerAlias : 設定伺服器網域別名\n  - DocumentRoot : 指定虛擬主機的網站主目錄\n  - ErrorLog : 設定 error_log 所存放的路徑\n  - CustomLog : 設定 access_log 所存放的路徑\n\n```vim\n<VirtualHost *:80>\n    ServerName your_project.com\n\n    ServerAdmin webmaster@localhost\n    DocumentRoot /var/www/your_project.com/public\n\n    <Directory /var/www/your_project.com>\n        AllowOverride All\n    </Directory>\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\n\n- 啟用 Apache 站點\n\n```bash\n# 關閉預設站點\nsudo a2dissite 000-default.conf\n\n# 啟用新站點\nsudo a2ensite your_project.com.conf\n\n# 首次設定需開啟\nsudo a2enmod rewrite\n\n# 重啟Apache\nsudo service apache2 restart\n```\n\n## 參考資料\n\n[Run Laravel on Google Compute Engine](https://medium.com/imarishwa-solutions/run-laravel-on-google-compute-engine-b0403a6a9240)\n\n[GCP/GCE/Ubuntu/Apache/Laravel5.6 踩雷筆記](https://bugswarehouse.blogspot.com/2018/07/gcpgceubuntuapachelaravel56.html)\n\n## 延伸閱讀\n\n[詳解 Ubuntu/CentOS 下 Apache 多站點配置](https://codertw.com/%E4%BC%BA%E6%9C%8D%E5%99%A8/377669/)\n\n[Apache 之——多虛擬主機多站點配置的兩種實現方案](https://www.796t.com/content/1546761795.html)\n\n[ubuntu 設定 apache 部署多個站點](https://www.796t.com/content/1545633208.html)\n\n[SSL 憑證設定](https://ithelp.ithome.com.tw/articles/10081759)\n\n[輕鬆部署 Laravel 應用](https://learnku.com/blog/Wi1dcard/tags/easy-deployment-of-laravel-applications_50034)\n","tocContent":""}