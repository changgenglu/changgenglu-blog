{"name":"在 GCP 部署 laravel 專案.md","content":"# 在 GCP 部署 laravel 專案\r\n\r\n> [執行環境設定](https://bugswarehouse.blogspot.com/2018/07/gcpgceubuntuapachelaravel56.html)\r\n>\r\n> - Ubuntu 20.04.1 LTS \\n \\l\r\n> - Apache/2.4.41 (Ubuntu)\r\n> - mysql Ver 8.0.29-0ubuntu0.20.04.3 for Linux on x86_64 ((Ubuntu))\r\n> - PHP 7.4.3\r\n> - git 2.25.1\r\n> - Composer 2.0.12\r\n\r\n## 設置專案\r\n\r\n### clone git repo\r\n\r\n將目錄切換到`/srv/www`，將託管在 git repo 的專案 clone 下來並依 laravel 上線環境設定流程執行。\r\n一般而言會將文件名稱設為域名。\r\n將目錄切換到 Apache 主機放公開程式的地方`/var/www`，將設定軟連結指向專案位置\r\n\r\n```bash\r\nln -s /srv/www/your_project.com /var/www/your_project.com\r\n```\r\n\r\n### 上線環境設定\r\n\r\n1. 安裝 compsoer 排除 dev 項目\r\n\r\n   ```bash\r\n   composer install --optimize-autoloader --no-dev\r\n   ```\r\n\r\n2. `.env`設定轉為線上並且關閉錯誤提示\r\n\r\n   ```php\r\n   APP_NAME=專案名稱\r\n   APP_ENV=production\r\n   APP_KEY=\r\n   APP_DEBUG=false\r\n   APP_URL=https://正式網址\r\n   ```\r\n\r\n3. 設定快取\r\n\r\n   ```bash\r\n   php artisan config:cache\r\n\r\n   #　下次更新程式記得更新config\r\n   php artisan config:clear\r\n   ```\r\n\r\n4. Composer 緩存\r\n\r\n   ```bash\r\n   composer dumpautoload -o\r\n   # 每次更新 composer install 後，都要再執行一次\r\n   ```\r\n\r\n5. 建立 keygen\r\n\r\n   ```bash\r\n   php artisan key:generate\r\n   ```\r\n\r\n6. 執行資料庫 migrate (須注意資料庫狀態)\r\n\r\n   ```bash\r\n   # 遷移資料表\r\n   php artisan migrate\r\n\r\n   # 填充資料\r\n   php artisan db:seed\r\n   ```\r\n\r\n7. 障礙排除\r\n\r\n   - 清除快取\r\n\r\n   ```bash\r\n   php artisan config:clear\r\n   ```\r\n\r\n   - migrate 指令\r\n\r\n   ```bash\r\n   # 還原 --step 此參數為後退多少版本\r\n   php artisan migrate:rollback\r\n   php artisan migrate:rollback --step=5\r\n\r\n   # 重置所有migration\r\n   php artisan migrate:refresh\r\n\r\n   # 重置所有migration，並填充資料\r\n   php artisan migrate:refresh --seed\r\n   ```\r\n\r\n### 設定專案文件夾的權限\r\n\r\n```bash\r\nsudo chgrp -R www-data /srv/www/your_project.com\r\nsudo chmod -R 775 /srv/www/your_project.com/storage\r\n```\r\n\r\n## 2. 設定 Apache\r\n\r\n- 設定 Apache server\r\n\r\n```bash\r\ncd /etc/apache2/sites-available\r\ncp 000-default.conf your_project.com.conf\r\n```\r\n\r\n- 編輯 conf 文件\r\n  - ServerName : 設定伺服器 Domain Name ，此名稱必須已經註冊\r\n  - ServerAdmin : 設定虛擬主機的管理者信箱，不一定要和本機的網站管理者相同\r\n  - ServerAlias : 設定伺服器網域別名\r\n  - DocumentRoot : 指定虛擬主機的網站主目錄\r\n  - ErrorLog : 設定 error_log 所存放的路徑\r\n  - CustomLog : 設定 access_log 所存放的路徑\r\n\r\n```vim\r\n<VirtualHost *:80>\r\n    ServerName your_project.com\r\n\r\n    ServerAdmin webmaster@localhost\r\n    DocumentRoot /var/www/your_project.com/public\r\n\r\n    <Directory /var/www/your_project.com>\r\n        AllowOverride All\r\n    </Directory>\r\n\r\n    ErrorLog ${APACHE_LOG_DIR}/error.log\r\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\r\n</VirtualHost>\r\n```\r\n\r\n- 啟用 Apache 站點\r\n\r\n```bash\r\n# 關閉預設站點\r\nsudo a2dissite 000-default.conf\r\n\r\n# 啟用新站點\r\nsudo a2ensite your_project.com.conf\r\n\r\n# 首次設定需開啟\r\nsudo a2enmod rewrite\r\n\r\n# 重啟Apache\r\nsudo service apache2 restart\r\n```\r\n\r\n## 參考資料\r\n\r\n[Run Laravel on Google Compute Engine](https://medium.com/imarishwa-solutions/run-laravel-on-google-compute-engine-b0403a6a9240)\r\n\r\n[GCP/GCE/Ubuntu/Apache/Laravel5.6 踩雷筆記](https://bugswarehouse.blogspot.com/2018/07/gcpgceubuntuapachelaravel56.html)\r\n\r\n## 延伸閱讀\r\n\r\n[詳解 Ubuntu/CentOS 下 Apache 多站點配置](https://codertw.com/%E4%BC%BA%E6%9C%8D%E5%99%A8/377669/)\r\n\r\n[Apache 之——多虛擬主機多站點配置的兩種實現方案](https://www.796t.com/content/1546761795.html)\r\n\r\n[ubuntu 設定 apache 部署多個站點](https://www.796t.com/content/1545633208.html)\r\n\r\n[SSL 憑證設定](https://ithelp.ithome.com.tw/articles/10081759)\r\n\r\n[輕鬆部署 Laravel 應用](https://learnku.com/blog/Wi1dcard/tags/easy-deployment-of-laravel-applications_50034)\r\n","tocContent":""}