{"name":"Laravel Excel.md","content":"# Laravel Excel\r\n\r\n> 使用套件：\r\n>\r\n> - maatwebsite/Excel 3.1\r\n>\r\n> 環境要求：\r\n>\r\n> - PHP `^7.0`\r\n>\r\n> - Laravel `^5.5`\r\n>\r\n> 參考資料：\r\n>\r\n> - [maatwebsite/Excel 3.1 使用教程 （导入篇）](https://learnku.com/articles/32400)\r\n>\r\n> - [maatwebsite/Excel 3.1 使用教程 （导出篇）](https://learnku.com/articles/32391)\r\n\r\n## 安裝\r\n\r\n```bash\r\ncomposer require maatwebsite/excel\r\n```\r\n\r\n## excel 匯出\r\n\r\n建立匯出文件，匯入匯出的業務盡量不要和原來的業務耦合\r\n\r\n```bash\r\nphp artisan make:export UserExport --model=User\r\n```\r\n\r\n在 app 目錄下建立 Export 資料夾\r\n\r\n- UserExport.php\r\n\r\n```php\r\nnamespace App\\Exports;\r\n\r\nuse App\\User;\r\nuse Maatwebsite\\Excel\\Concerns\\FromCollection;\r\n\r\nclass UsersExport implements FromCollection\r\n{\r\n    protected $data;\r\n\r\n    public function __construct($data)\r\n    {\r\n        $this->data = $data;\r\n    }\r\n\r\n    // 陣列轉集合\r\n    public function collection()\r\n    {\r\n        return new Collection($this->createData());\r\n    }\r\n\r\n    // 商業邏輯\r\n    public function createData()\r\n    {\r\n      // to-do\r\n    }\r\n}\r\n```\r\n\r\n- UserController.php\r\n\r\n```php\r\nuse App\\Exports\\UsersExport;\r\nuse Maatwebsite\\Excel\\Facades\\Excel;\r\nuse App\\Http\\Controllers\\Controller;\r\n\r\nclass UsersController extends Controller\r\n{\r\n    public function export()\r\n    {\r\n        return Excel::download(new UsersExport, 'users.xlsx');\r\n    }\r\n}\r\n```\r\n\r\n### 欄位格式化：設定儲存格格式\r\n\r\n```php\r\nuse PhpOffice\\PhpSpreadsheet\\Style\\NumberFormat;\r\nuse Maatwebsite\\Excel\\Concerns\\WithColumnFormatting;\r\n\r\n// 新增 WithColumnFormatting\r\nclass UsersExport implements FromCollection, WithColumnFormatting\r\n{\r\n    public function columnFormats(): array\r\n    {\r\n        return [\r\n            'B' => NumberFormat::FORMAT_DATE_DDMMYYYY, // 日期\r\n            'C' => NumberFormat::FORMAT_NUMBER_00, // 取到小數點第二位\r\n        ];\r\n    }\r\n}\r\n```\r\n\r\n### 自動欄寬\r\n\r\n```php\r\nuse Maatwebsite\\Excel\\Concerns\\ShouldAutoSize;\r\n\r\n// 新增 ShouldAutoSize\r\nclass UsersExport implements FromCollection, ShouldAutoSize\r\n```\r\n\r\n### 匯出多個工作表(sheet)\r\n\r\n匯出多個表需要兩步驟，先組裝 sheet，後建立對應的 sheet 表。\r\n\r\n```php\r\nuse Maatwebsite\\Excel\\Concerns\\Exportable;\r\nuse Maatwebsite\\Excel\\Concerns\\WithMultipleSheets;\r\n\r\n// 新增 WithMultipleSheets\r\nclass UsersExport implements WithMultipleSheets\r\n{\r\n    use Exportable;\r\n\r\n    protected $year;\r\n\r\n    public function __construct(int $year)\r\n    {\r\n        $this->year = $year;\r\n    }\r\n\r\n    /**\r\n     * @return array\r\n     */\r\n    public function sheets(): array\r\n    {\r\n        $sheets = [];\r\n\r\n        for ($month = 1; $month <= 12; $month++) {\r\n            // 不同的資料可以呼叫不同的方法\r\n            $sheets[] = new UserPerMonthSheet($this->year, $month);\r\n        }\r\n\r\n        return $sheets;\r\n    }\r\n}\r\n```\r\n\r\n然後新增 UserPerMonthSheet Class\r\n\r\n```php\r\nnamespace App\\Exports;\r\n\r\nuse Maatwebsite\\Excel\\Concerns\\FromQuery;\r\nuse Maatwebsite\\Excel\\Concerns\\WithTitle;\r\n\r\nclass UserPerMonthSheet implements FromQuery, WithTitle\r\n{\r\n    private $month;\r\n    private $year;\r\n\r\n    public function __construct(int $year, int $month)\r\n    {\r\n        $this->month = $month;\r\n        $this->year  = $year;\r\n    }\r\n\r\n    /**\r\n     * @return Builder\r\n     */\r\n    public function query()\r\n    {\r\n        return User\r\n            ::query()\r\n            ->whereYear('created_at', $this->year)\r\n            ->whereMonth('created_at', $this->month);\r\n    }\r\n\r\n    /**\r\n     * sheet 工作表名稱\r\n     * @return string\r\n     */\r\n    public function title(): string\r\n    {\r\n        return 'Month ' . $this->month;\r\n    }\r\n}\r\n```\r\n\r\n### 事件模組：設定儲存格高度、垂直置中、字體顏色、背景顏色\r\n\r\n提供多種事件：BeforeExport, BeforeWriting, BeforeSheet, AfterSheet 等等，修改儲存格使用 AfterSheet\r\n\r\n```php\r\nnamespace App\\Exports;\r\n\r\nuse Maatwebsite\\Excel\\Concerns\\WithEvents;\r\nuse Maatwebsite\\Excel\\Events\\BeforeExport;\r\nuse Maatwebsite\\Excel\\Events\\BeforeWriting;\r\nuse Maatwebsite\\Excel\\Events\\BeforeSheet;\r\n\r\nclass UserExport implements WithEvents\r\n{\r\n    /**\r\n     * 註冊事件\r\n     * @return array\r\n     */\r\n    public function registerEvents(): array\r\n    {\r\n        return [\r\n            AfterSheet::class  => function(AfterSheet $event) {\r\n                // 作者\r\n                $event->writer->setCreator('Patrick');\r\n                // 列寬\r\n                $event->sheet->getDelegate()->getColumnDimension('A')->setWidth(50);\r\n                // 行高，$i 為資料行數\r\n                for ($i = 0; $i<=1265; $i++) {\r\n                    $event->sheet->getDelegate()->getRowDimension($i)->setRowHeight(50);\r\n                }\r\n                // 垂直置中\r\n                $event->sheet->getDelegate()->getStyle('A1:K1265')->getAlignment()->setVertical('center');\r\n                // 字體、顏色、背景，詳細設定查看 applyFromArray 方法\r\n                $event->sheet->getDelegate()->getStyle('A1:K6')->applyFromArray([\r\n                    'font' => [\r\n                        'name' => 'Arial',\r\n                        'bold' => true,\r\n                        'italic' => false,\r\n                        'strikethrough' => false,\r\n                        'color' => [\r\n                            'rgb' => '808080'\r\n                        ]\r\n                    ],\r\n                    'fill' => [\r\n                        'fillType' => 'linear', // 漸層效果\r\n                        'rotation' => 45, // 漸層角度\r\n                        'startColor' => [\r\n                            'rgb' => '000000' // 起始顏色\r\n                        ],\r\n                        // 結束顏色\r\n                        'endColor' => [\r\n                            'argb' => 'FFFFFF'\r\n                        ]\r\n                    ]\r\n                ]);\r\n                // 合併儲存格 mergeCells('A1:B1')\r\n                $event->sheet->getDelegate()->mergeCells('A1:B1');\r\n            }\r\n        ];\r\n    }\r\n}\r\n```\r\n\r\n### 搭配 vue 前端\r\n\r\n> 參考資料\r\n>\r\n> [Day17 使用 Laravel Excel 來匯出資料](https://ithelp.ithome.com.tw/articles/10302013)\r\n\r\n## excel 匯入\r\n","tocContent":""}