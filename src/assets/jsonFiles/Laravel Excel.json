{"name":"Laravel Excel.md","content":"# Laravel Excel\n\n> 使用套件：\n>\n> - maatwebsite/Excel 3.1\n>\n> 環境要求：\n>\n> - PHP `^7.0`\n>\n> - Laravel `^5.5`\n>\n> 參考資料：\n>\n> - [maatwebsite/Excel 3.1 使用教程 （导入篇）](https://learnku.com/articles/32400)\n>\n> - [maatwebsite/Excel 3.1 使用教程 （导出篇）](https://learnku.com/articles/32391)\n\n## 安裝\n\n```bash\ncomposer require maatwebsite/excel\n```\n\n## excel 匯出\n\n建立匯出文件，匯入匯出的業務盡量不要和原來的業務耦合\n\n```bash\nphp artisan make:export UserExport --model=User\n```\n\n在 app 目錄下建立 Export 資料夾\n\n- UserExport.php\n\n```php\nnamespace App\\Exports;\n\nuse App\\User;\nuse Maatwebsite\\Excel\\Concerns\\FromCollection;\n\nclass UsersExport implements FromCollection\n{\n    protected $data;\n\n    public function __construct($data)\n    {\n        $this->data = $data;\n    }\n\n    // 陣列轉集合\n    public function collection()\n    {\n        return new Collection($this->createData());\n    }\n\n    // 商業邏輯\n    public function createData()\n    {\n      // to-do\n    }\n}\n```\n\n- UserController.php\n\n```php\nuse App\\Exports\\UsersExport;\nuse Maatwebsite\\Excel\\Facades\\Excel;\nuse App\\Http\\Controllers\\Controller;\n\nclass UsersController extends Controller\n{\n    public function export()\n    {\n        return Excel::download(new UsersExport, 'users.xlsx');\n    }\n}\n```\n\n### 欄位格式化：設定儲存格格式\n\n```php\nuse PhpOffice\\PhpSpreadsheet\\Style\\NumberFormat;\nuse Maatwebsite\\Excel\\Concerns\\WithColumnFormatting;\n\n// 新增 WithColumnFormatting\nclass UsersExport implements FromCollection, WithColumnFormatting\n{\n    public function columnFormats(): array\n    {\n        return [\n            'B' => NumberFormat::FORMAT_DATE_DDMMYYYY, // 日期\n            'C' => NumberFormat::FORMAT_NUMBER_00, // 取到小數點第二位\n        ];\n    }\n}\n```\n\n### 自動欄寬\n\n```php\nuse Maatwebsite\\Excel\\Concerns\\ShouldAutoSize;\n\n// 新增 ShouldAutoSize\nclass UsersExport implements FromCollection, ShouldAutoSize\n```\n\n### 匯出多個工作表(sheet)\n\n匯出多個表需要兩步驟，先組裝 sheet，後建立對應的 sheet 表。\n\n```php\nuse Maatwebsite\\Excel\\Concerns\\Exportable;\nuse Maatwebsite\\Excel\\Concerns\\WithMultipleSheets;\n\n// 新增 WithMultipleSheets\nclass UsersExport implements WithMultipleSheets\n{\n    use Exportable;\n\n    protected $year;\n\n    public function __construct(int $year)\n    {\n        $this->year = $year;\n    }\n\n    /**\n     * @return array\n     */\n    public function sheets(): array\n    {\n        $sheets = [];\n\n        for ($month = 1; $month <= 12; $month++) {\n            // 不同的資料可以呼叫不同的方法\n            $sheets[] = new UserPerMonthSheet($this->year, $month);\n        }\n\n        return $sheets;\n    }\n}\n```\n\n然後新增 UserPerMonthSheet Class\n\n```php\nnamespace App\\Exports;\n\nuse Maatwebsite\\Excel\\Concerns\\FromQuery;\nuse Maatwebsite\\Excel\\Concerns\\WithTitle;\n\nclass UserPerMonthSheet implements FromQuery, WithTitle\n{\n    private $month;\n    private $year;\n\n    public function __construct(int $year, int $month)\n    {\n        $this->month = $month;\n        $this->year  = $year;\n    }\n\n    /**\n     * @return Builder\n     */\n    public function query()\n    {\n        return User\n            ::query()\n            ->whereYear('created_at', $this->year)\n            ->whereMonth('created_at', $this->month);\n    }\n\n    /**\n     * sheet 工作表名稱\n     * @return string\n     */\n    public function title(): string\n    {\n        return 'Month ' . $this->month;\n    }\n}\n```\n\n### 事件模組：設定儲存格高度、垂直置中、字體顏色、背景顏色\n\n提供多種事件：BeforeExport, BeforeWriting, BeforeSheet, AfterSheet 等等，修改儲存格使用 AfterSheet\n\n```php\nnamespace App\\Exports;\n\nuse Maatwebsite\\Excel\\Concerns\\WithEvents;\nuse Maatwebsite\\Excel\\Events\\BeforeExport;\nuse Maatwebsite\\Excel\\Events\\BeforeWriting;\nuse Maatwebsite\\Excel\\Events\\BeforeSheet;\n\nclass UserExport implements WithEvents\n{\n    /**\n     * 註冊事件\n     * @return array\n     */\n    public function registerEvents(): array\n    {\n        return [\n            AfterSheet::class  => function(AfterSheet $event) {\n                // 作者\n                $event->writer->setCreator('Patrick');\n                // 列寬\n                $event->sheet->getDelegate()->getColumnDimension('A')->setWidth(50);\n                // 行高，$i 為資料行數\n                for ($i = 0; $i<=1265; $i++) {\n                    $event->sheet->getDelegate()->getRowDimension($i)->setRowHeight(50);\n                }\n                // 垂直置中\n                $event->sheet->getDelegate()->getStyle('A1:K1265')->getAlignment()->setVertical('center');\n                // 字體、顏色、背景，詳細設定查看 applyFromArray 方法\n                $event->sheet->getDelegate()->getStyle('A1:K6')->applyFromArray([\n                    'font' => [\n                        'name' => 'Arial',\n                        'bold' => true,\n                        'italic' => false,\n                        'strikethrough' => false,\n                        'color' => [\n                            'rgb' => '808080'\n                        ]\n                    ],\n                    'fill' => [\n                        'fillType' => 'linear', // 漸層效果\n                        'rotation' => 45, // 漸層角度\n                        'startColor' => [\n                            'rgb' => '000000' // 起始顏色\n                        ],\n                        // 結束顏色\n                        'endColor' => [\n                            'argb' => 'FFFFFF'\n                        ]\n                    ]\n                ]);\n                // 合併儲存格 mergeCells('A1:B1')\n                $event->sheet->getDelegate()->mergeCells('A1:B1');\n            }\n        ];\n    }\n}\n```\n\n### 搭配 vue 前端\n\n> 參考資料\n>\n> [Day17 使用 Laravel Excel 來匯出資料](https://ithelp.ithome.com.tw/articles/10302013)\n\n## excel 匯入\n","tocContent":""}