{"name":"Laravel 表單驗證.md","content":"# Laravel 表單驗證\r\n\r\n## 基礎驗證方法 `validate()`\r\n\r\n```php\r\n$validatedData = $request->validate([\r\n    'title' => ['required', 'unique:posts', 'max:255'],\r\n    'body' => ['required'],\r\n]);\r\n```\r\n\r\n也可以使用 `validateWithBag()` 來請求驗證，並將所有錯誤訊息，儲存在一個命名錯誤訊息包\r\n\r\n```php\r\n$validatedData = $request->validateWithBag('post', [\r\n    'title' => ['required', 'unique:posts', 'max:255'],\r\n    'body' => ['required'],\r\n]);\r\n```\r\n\r\n在驗證規則中，加入 bail，如果某個字串在第一次驗證失敗之後，就立即停止驗證。\r\n\r\n```php\r\n$request->validate([\r\n    'title' => 'bail|required|unique:posts|max:255',\r\n    'body' => 'required',\r\n]);\r\n// 如果title沒通過unique的規則，那麼就不會再 繼續驗證max規則\r\n```\r\n\r\n如果你的 HTTP 請求，包還嵌套參數(比如陣列)，你可以在驗證規則中使用「點」語法，來指定這些參數\r\n\r\n```php\r\n$request->validate([\r\n    'title' => 'required|unique:posts|max:255',\r\n    'author.name' => 'required',\r\n    'author.description' => 'required',\r\n]);\r\n```\r\n\r\n如果你的字段名稱包含點，則可以使用跳脫符號\r\n\r\n```php\r\n$request->validate([\r\n    'title' => 'required|unique:posts|max:255',\r\n    'v1\\.0' => 'required',\r\n]);\r\n```\r\n\r\n## [常用規則](https://learnku.com/docs/laravel/8.x/validation/9374)\r\n","tocContent":""}