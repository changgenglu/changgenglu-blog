{"name":"Laravel Artisan command.md","content":"# Artisan Command\n\n## 自訂 Artisan command\n\n### 利用指令建立要自訂命令的檔案\n\n```bash\nphp artisan make:command <command-name>\n```\n\n建立的檔案位置會在 app/Console/Commands\n\n### 編輯檔案\n\n編輯指令名稱\n\n```php\nprotected $signature = 'EditCity:city {country_code}';\n```\n\n實際指令\n\n```bash\nphp artisan EditCity:city us\n```\n\n編寫命令\n\n```php\npublic function handle()\n{\n    try {\n       echo \"Hello World\";\n    } catch (QueryException $ex) {\n        dd($ex->getMessage());\n    }\n}\n```\n\n### 參數\n\n- 花括號中為傳入的參數\n\n  - {country_code?} 可選的參數\n  - {country_code=tw} 參數的預設值\n  - {country_code*} `*`代表輸入的是陣列\n  - {country_code:國家代碼} 加入敘述\n\n- 選項：關鍵字是`--`\n\n  - {--queue=} 選項後面加上 `=`，表示選項需要明確指定值。\n  - {--Q|queue} 可用簡寫\n  - {--id=_} `_`代表輸入的是陣列\n  - {--queue=:這個工作是否該進入隊列} 加入敘述\n\n- 取得參數\n\n  - $this->argument('user') 取得單一 user 參數\n  - $this->arguments() 取得所有參數，以陣列呈現\n  - $this->options('queue') 取得單一 queue 選項\n  - $this->options() 取得所有選項，以陣列呈現\n\n- 互動式指令\n\n  - ask 詢問\n\n    ```php\n    $name = $this->ask('what is ur name');\n    ```\n\n  - secret 詢問，但回答在終端機看不到\n\n    ```php\n    $name = $this->secret('what is ur password');\n    ```\n\n  - confirm 確認問題，預設回傳值是 false，若使用者回傳 y 則回傳 true\n\n    ```php\n    if ($this->confirm('wanna continue?')) {\n        //\n    }\n\n    ```\n\n  - anticipate 自動完成，若是 Taylor 或是 Dayle 這兩個選項就自動完成，使用者亦可以輸入其他選項\n\n    ```php\n    $name = $this->anticipate('what is ur name', ['Taylor', 'Dayle']);\n    ```\n\n  - choice 選項選擇，使用者輸入 key 值\n\n    ```php\n    $name $this->choice('what is ur name', ['Sunny', 'Taylor', 'Dayle'], $defaultIndex);\n    ```\n\n    ```txt\n    What is your name? [Taylor]: //在這個$defaultIndex = 1\n      [0] Sunny\n      [1] Taylor\n      [2] Dayle\n     > 0\n\n    Display name: Sunny\n    ```\n\n### 註冊 command\n\napp\\console\\Commands\\Kernel.php\n\n```php\nprotected $commands = [\n    EditCity::class\n];\n```\n","tocContent":""}